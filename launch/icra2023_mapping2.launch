<?xml version="1.0" encoding="utf-8"?>
<launch>

  <arg name="octomap_frame_id" default="fast_lio"/>
  <arg name="resolution" default="0.05"/>
  <arg name="output" default="screen"/>
  <arg name="namespace" default="b1_gazebo"/>

  <group ns="$(arg namespace)">
    <!-- FAST LIO -->
    <node pkg="fast_lio" type="fastlio_mapping" name="fast_lio_node" output="screen" clear_params="true">
      <param name="common/lid_topic" type="string" value="velodyne_points"/>
      <param name="common/imu_topic" type="string" value="imu/data"/>
      <param name="common/time_sync_en" type="bool" value="false"/>
      <param name="common/time_offset_lidar_to_imu" type="double" value="0.0"/>
      <param name="preprocess/lidar_type" type="int" value="1"/> <!-- 1: VLP16 -->
      <param name="preprocess/scan_line" type="int" value="16"/>
      <param name="preprocess/scan_rate" type="int" value="10"/>
      <param name="preprocess/timestamp_unit" type="int" value="2"/>
      <param name="preprocess/blind" type="double" value="1.0"/>
      <param name="mapping/acc_cov" type="double" value="0.0001"/>
      <param name="mapping/gyr_cov" type="double" value="0.0001"/>
      <param name="mapping/b_acc_cov" type="double" value="0.001"/>
      <param name="mapping/b_gyr_cov" type="double" value="0.001"/>
      <param name="mapping/fov_degree" type="int" value="180"/>
      <param name="mapping/det_range" type="double" value="100.0"/>
      <param name="mapping/extrinsic_est_en" type="bool" value="false"/>
      <rosparam param="mapping/extrinsic_T">[-0.10, 0.0, 0.178]</rosparam>
      <rosparam param="mapping/extrinsic_R">[1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0]</rosparam>
      <param name="publish/path_en" type="bool" value="true"/>
      <param name="publish/scan_publish_en" type="bool" value="true"/>
      <param name="publish/dense_publish_en" type="bool" value="true"/>
      <param name="publish/scan_bodyframe_publish_en" type="bool" value="false"/>
      <param name="pcd_save/pcd_save_en" type="bool" value="false"/>
      <param name="pcd_save/interval" type="int" value="-1"/>
      <param name="point_filter_num" type="int" value="2"/>
      <param name="max_iteration" type="int" value="3"/>
      <param name="cube_side_length" type="int" value="100"/>
      <param name="lio_frame_id" type="string" value="$(arg namespace)/fast_lio"/>
      <param name="base_frame_id" type="string" value="$(arg namespace)/velodyne"/>
      <param name="publish_tf" type="bool" value="true"/>
      <param name="invert_tf" type="bool" value="true"/>
      <param name="filter_size_corner" type="double" value="0.2"/>
      <param name="filter_size_surf" type="double" value="0.2"/>
      <param name="filter_size_map" type="double" value="0.2"/>
      <param name="feature_extract_enable" type="bool" value="false"/>
    </node>

    <!-- Octomap -->
    <group>

      <!-- Declare mapping-related operations in a nodelet to remove overhead -->
      <node pkg="nodelet" type="nodelet" name="mapping_nodelet" args="manager" output="$(arg output)"/>

      <!-- Voxel downsample & filter-->
      <node pkg="nodelet" type="nodelet" name="downsample" args="load pcl/VoxelGrid mapping_nodelet" output="$(arg output)">
        <remap from="downsample/input" to="velodyne_points"/>
        <remap from="downsample/output" to="downsampled"/>
      </node>

      <node name="downsample_dynparam" pkg="dynamic_reconfigure" type="dynparam" args="set_from_parameters downsample" output="$(arg output)">
        <param name="leaf_size" type="double" value="$(eval arg('resolution') * 0.5)"/>
        <param name="filter_field_name" type="str" value="z"/>
        <param name="filter_limit_min" type="double" value="-1000.0"/>
        <param name="filter_limit_max" type="double" value="1000.0"/>
        <param name="filter_limit_negative" type="bool" value="false"/>
      </node>

      <!-- Filter based on x-y-z distances -->
      <node pkg="nodelet" type="nodelet" name="cropbox_filter" args="load pcl/CropBox mapping_nodelet" output="$(arg output)">
        <remap from="cropbox_filter/input" to="downsampled"/>
        <remap from="cropbox_filter/output" to="filtered"/>
      </node>

      <node name="cropbox_dynparam" pkg="dynamic_reconfigure" type="dynparam" args="set_from_parameters cropbox_filter" output="$(arg output)">
        <param name="min_x" type="double" value="-0.55"/>
        <param name="min_y" type="double" value="-0.55"/>
        <param name="min_z" type="double" value="-0.55"/>
        <param name="max_x" type="double" value="0.55"/>
        <param name="max_y" type="double" value="0.55"/>
        <param name="max_z" type="double" value="0.55"/>
        <param name="negative" type="bool" value="true"/>
      </node>

      <!-- Map -->
      <node pkg="nodelet" type="nodelet" name="octomap_server_nodelet" args="load octomap_server/OctomapServerNodelet mapping_nodelet" clear_params="true"  output="$(arg output)">
        <param name="resolution" value="$(arg resolution)"/>
        <param name="frame_id" type="string" value="$(arg namespace)/$(arg octomap_frame_id)"/>
        <param name="base_frame_id" type="string" value="$(arg namespace)/base"/>
        <param name="sensor_model/max_range" value="5.0"/>
        <remap from="cloud_in" to="filtered"/>
      </node>

      <!-- Service node to enable querying octomaps -->
      <node pkg="octomap_with_query" type="octomap_query_service_node" name="octomap_query_node" output="$(arg output)"/>

    </group>

  </group>
</launch>
